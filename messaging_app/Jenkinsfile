pipeline {
    agent any
    
    environment {
        PROJECT = 'your-repo-name'
        GITHUB_CREDENTIALS = 'your-github-credentials-id'
    }
    
    stages {
        stage('Checkout') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/main']],
                    extensions: [],
                    userRemoteConfigs: [[
                        credentialsId: env.GITHUB_CREDENTIALS,
                        url: 'git@github.com:your-username/your-repo.git'
                    ]]
                ])
            }
        }
        
        stage('Set up Python') {
            steps {
                sh 'python -m pip install --upgrade pip'
                sh 'pip install -r requirements.txt'
            }
        }
        
        stage('Run Tests') {
            steps {
                sh 'pytest --junitxml=test-results.xml || true'
            }
            post {
                always {
                    junit 'test-results.xml'
                    publishHTML(target: [
                        allowMissing: false,
                        alwaysLinkToLastBuild: false,
                        keepAll: true,
                        reportDir: 'htmlcov',
                        reportFiles: 'index.html',
                        reportName: 'Pytest Coverage Report'
                    ])
                }
            }
        }
    }
}