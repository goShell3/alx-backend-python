pipeline {
    agent any
    
    environment {
        DOCKER_HUB_CREDENTIALS = 'docker-hub-creds'  // Your Docker Hub credentials ID in Jenkins
        DOCKER_IMAGE = 'your-dockerhub-username/messaging-app'
        DOCKER_TAG = "${env.BUILD_NUMBER}"
    }
    
    stages {
        stage('Checkout Code') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/main']],  // Change branch name if needed
                    extensions: [],
                    userRemoteConfigs: [[
                        url: 'https://github.com/your-username/alx-backend-python.git'
                    ]]
                ])
            }
        }
        
        stage('Build Docker Image') {
            steps {
                dir('messaging_app') {
                    script {
                        docker.build("${env.DOCKER_IMAGE}:${env.DOCKER_TAG}")
                    }
                }
            }
        }
        
        stage('Run Tests') {
            steps {
                dir('messaging_app') {
                    sh 'python -m pip install -r requirements.txt'
                    sh 'pytest --junitxml=test-results.xml || true'
                }
            }
            post {
                always {
                    junit 'messaging_app/test-results.xml'
                }
            }
        }
        
        stage('Push to Docker Hub') {
            steps {
                script {
                    docker.withRegistry('https://registry.hub.docker.com', env.DOCKER_HUB_CREDENTIALS) {
                        docker.image("${env.DOCKER_IMAGE}:${env.DOCKER_TAG}").push()
                    }
                }
            }
        }
    }
    
    post {
        always {
            script {
                // Clean up Docker images
                sh 'docker system prune -f'
            }
        }
    }
}